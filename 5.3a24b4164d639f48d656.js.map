{"version":3,"sources":["./src/home/components/intro/intro.component.ts","./src/home/components/intro/intro.component.html","./src/home/components/base-info/base-info.component.ts","./src/home/components/base-info/base-info.component.html","./src/home/components/features/features.component.ts","./src/home/components/features/features.component.html","./src/home/components/recents/recents.component.ts","./src/home/components/recents/recents.component.html","./src/home/components/startups/startups.component.ts","./src/home/components/startups/startups.component.html","./src/home/components/footer/footer.component.ts","./src/home/components/footer/footer.component.html","./src/home/containers/index/index.component.ts","./src/home/containers/index/index.component.html","./src/home/components/nav-bar/nav-bar.component.ts","./src/home/components/nav-bar/nav-bar.component.html","./src/home/home.component.ts","./src/home/home.component.html","./node_modules/ngx-infinite-scroll/__ivy_ngcc__/modules/ngx-infinite-scroll.js","./src/home/home.module.ts"],"names":["IntroComponent","ngOnInit","BaseInfoComponent","FeaturesComponent","RecentsComponent","StartupsComponent","array","sum","throttle","scrollDistance","scrollUpDistance","direction","modalOpen","this","appendItems","addItems","startIndex","endIndex","_method","i","generateWord","join","prependItems","onScrollDown","console","log","start","onUp","toggleModal","FooterComponent","IndexComponent","NavBarComponent","HomeComponent","InfiniteScrollModule","ɵmod","type","ɵinj","factory","t","providers","imports","ROUTES","path","component","children","redirectTo","HomeModule","forChild"],"mappings":"wNAEA,2B,6CAKaA,I,uBAAAA,EAAc,2TCP3B,gBAEE,gBAAwB,wCAA6B,OACrD,gBACE,8GAGF,OACA,gBACE,gBACF,OACA,gBACE,gBAKF,OAEF,S,idDjBA,GEAA,aAOE,c,OAEA,YAAAC,SAAA,a,sCAJWC,I,uBAAAA,EAAiB,0ICP9B,gBACE,gBACE,gBAAuB,sDAAsC,OAC7D,gBACE,kUAKF,OACF,OACF,S,0cDTA,GEAA,aAME,c,6CADWC,I,uBAAAA,EAAiB,maCP9B,gBACE,gBACE,gBACE,gBACE,gBACE,mBACE,gBAIF,OACA,gBAA+B,8BAAmB,OAClD,YACE,kGAEF,OACA,iBAA6B,8BAAkB,OAC/C,aAAG,yEAA6D,OAEhE,iBAA6B,sBAAU,OACvC,aACE,oBAAO,cACP,uBAAU,cACV,uBAAU,cACV,oBAAO,cACP,oBAAO,cACP,sBAAS,cACX,OACF,OACF,OAEA,iBACE,iBACE,oBACE,iBACF,OACA,iBAA+B,8BAAkB,OACjD,aACE,uHAEF,OACA,iBAA6B,8BAAkB,OAC/C,aAAG,yDAA6C,OAEhD,iBAA6B,sBAAU,OACvC,aACE,sBAAS,cACT,qBAAQ,cACR,uBAAU,cACV,oBAAO,cACP,oBAAO,cACP,sBAAS,cACX,OACF,OACF,OACA,iBACE,iBACE,oBACE,kBAIF,OACA,iBAA+B,+BAAmB,OAClD,aAAG,2EAA+D,OAClE,iBAA6B,8BAAkB,OAC/C,aAAG,yCAA6B,OAEhC,iBAA6B,sBAAU,OACvC,aACE,4BAAe,cACf,sBAAS,cACT,qBAAQ,cACR,uBAAU,cACV,oBAAO,cACP,oBAAO,cACP,sBAAS,cACX,OACF,OACF,OACF,OACF,OACF,S,01BDhFA,GEAA,aAME,c,6CADWC,I,uBAAAA,EAAgB,2lDCP7B,gBACE,gBAAyB,yBAAc,OACvC,gBACE,qEACA,cAAsC,oBAAS,OACjD,OACA,gBAEE,gBACE,gBACE,iBACE,iBACE,iBACA,mBAAmF,sBAAU,OAC/F,OACA,kBACE,kBACE,qDACF,OACA,kBACE,gBACE,2BAAc,gBAChB,OACF,OACF,OACF,OACF,OACF,OAEA,iBACE,iBACE,iBACE,kBACE,kBACA,mBAAgD,qBAAS,OAC3D,OACA,kBACE,kBACE,gGAEF,OACA,kBACE,gBACE,2BAAc,gBAChB,OACF,OACF,OACF,OACF,OACF,OAEA,iBACE,iBACE,iBACE,kBACE,kBACA,mBAAgD,oBAAQ,OAC1D,OACA,kBACE,kBACE,2DACF,OACA,kBACE,gBACE,2BAAc,gBAChB,OACF,OACF,OACF,OACF,OACF,OAEA,iBACE,iBACE,iBACE,kBACE,kBACA,mBAAiD,mBAAM,OACzD,OACA,kBACE,kBACE,uDACF,OACA,kBACE,gBACE,2BAAc,gBAChB,OACF,OACF,OACF,OACF,OACF,OAEA,iBACE,iBACE,iBACE,kBACE,kBACA,mBAAiD,iBAAI,OACvD,OACA,kBACE,kBACE,2FACF,OACA,kBACE,gBACE,2BAAc,gBAChB,OACF,OACF,OACF,OACF,OACF,OACF,OACF,S,0jDDhHA,GEAA,aAOE,c,OAEA,YAAAH,SAAA,a,sCAJWI,I,uBAAAA,EAAiB,i+CCP9B,gBACE,gBACE,gBAA2B,8BAAmB,OAC9C,gBACE,8PAIF,OACF,OACF,OACA,gBACE,gBACE,gBACE,gBACE,iBACE,iBACE,iBACA,mBACE,0BAAa,kBAAS,iBAAI,OAAS,oBACrC,OACF,OACA,kBACE,6FAEF,OACA,kBACE,gBACE,wBACF,OACF,OACF,OACF,OAEA,iBACE,kBACE,iBACE,kBACA,mBACE,kBAAS,2BAAc,OAAU,oBACnC,OACF,OACA,kBACE,wHAEF,OACA,kBACE,gBACE,wBACF,OACF,OACF,OACF,OAEA,iBACE,kBACE,iBACE,kBACA,mBACE,kBAAS,iBAAI,OAAU,qBACzB,OACF,OACA,kBACE,uGAEF,OACA,kBACE,gBACE,wBACF,OACF,OACF,OACF,OACF,OACA,kBACE,iBACE,kBACE,iBACE,kBACA,mBACE,kBAAS,0BAAa,OACxB,OACF,OACA,kBACE,yHAEF,OACA,kBACE,gBACE,wBACF,OACF,OACF,OACF,OACF,OACF,OACF,OAEA,iBACE,kBACE,kBAA6B,qDAAyC,OACtE,kBACE,kGAEF,OACA,kBACE,gBAEE,kCACF,OACF,OACF,OACF,S,u1DD9GA,GEAA,aAcE,aARA,KAAAC,MAAQ,GACR,KAAAC,IAAM,IACN,KAAAC,SAAW,IACX,KAAAC,eAAiB,EACjB,KAAAC,iBAAmB,EACnB,KAAAC,UAAY,GACZ,KAAAC,WAAY,EAGVC,KAAKC,YAAY,EAAGD,KAAKN,K,OAG3B,YAAAQ,SAAA,SAASC,EAAYC,EAAUC,GAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIN,KAAKN,MAAOY,EAC9BN,KAAKP,MAAMY,GAAS,CAACL,KAAKN,IAAMY,EAAG,IAAKN,KAAKO,gBAAgBC,KAAK,MAItE,YAAAP,YAAA,SAAYE,EAAYC,GACtBJ,KAAKE,SAASC,EAAYC,EAAU,SAGtC,YAAAK,aAAA,SAAaN,EAAYC,GACvBJ,KAAKE,SAASC,EAAYC,EAAU,YAGtC,YAAAM,aAAA,WACEC,QAAQC,IAAI,mBAGZ,IAAMC,EAAQb,KAAKN,IACnBM,KAAKN,KAAO,GACZM,KAAKC,YAAYY,EAAOb,KAAKN,KAE7BM,KAAKF,UAAY,QAGnB,YAAAgB,KAAA,WACEH,QAAQC,IAAI,gBACZ,IAAMC,EAAQb,KAAKN,IACnBM,KAAKN,KAAO,GACZM,KAAKS,aAAaI,EAAOb,KAAKN,KAE9BM,KAAKF,UAAY,MAEnB,YAAAS,aAAA,WACE,MAAO,OAGT,YAAAQ,YAAA,WACEf,KAAKD,WAAaC,KAAKD,W,sCAnDdiB,I,uBAAAA,EAAe,2iCCP5B,gBACA,gBACE,gBACE,gBACE,gBACE,iBAA0B,0BAAe,OAC3C,OACA,gBACE,iBACG,+FACU,OAEf,OACA,iBACE,kBACE,eAIE,2BACF,OACF,OACF,OACF,OACF,OACF,OACA,kBACE,kBACE,kBAKA,kBACE,6CAAgC,cAChC,gCACF,OACA,kBACE,gBAKE,gBACF,OACA,gBAKE,gBACF,OACA,gBAKE,gBACF,OACA,gBACE,gBACF,OACF,OACF,OACA,kBACE,kDACF,OACF,S,27BDjEA,GEAA,aAOE,c,OAEA,YAAA5B,SAAA,a,sCAJW6B,I,uBAAAA,EAAc,sECP3B,gBACA,oBACA,mBACA,kBACA,mBACA,mB,yCDHA,GEAA,aAOE,c,OAEA,YAAA7B,SAAA,a,sCAJW8B,I,uBAAAA,EAAe,2dCP5B,gBACE,gBAGE,eACE,gBAKF,OACA,gBAQA,cAIE,sBACF,OACF,OACF,S,gBDxBA,GEAA,aAOE,c,OAEA,YAAA9B,SAAA,a,sCAJW+B,I,uBAAAA,EAAa,+FCN1B,kBAGA,4B,4SDFA,G,qNE6wBMC,E,yCAENA,EAAqBC,UAAO,KAAwB,CAAEC,KAAMF,IAC5DA,EAAqBG,UAAO,KAAwB,CAAEC,QAAS,SAAsCC,GAAK,OAAO,IAAKA,GAAKL,IAA4BM,UAAW,GAAIC,QAAS,CAAC,M,KClwBnKC,EAAiB,CAC5B,CACEC,KAAM,GACNC,UAAW,EACXC,SAAU,CACR,CACEF,KAAM,GACNC,UAAW,KAIjB,CAAED,KAAM,KAAMG,WAAY,MAG5B,2B,8BAeaC,I,oDAAAA,IAAU,SAdZ,CAAC,IAAc,EAAsB,IAAaC,SAASN,O,EADtE","file":"5.3a24b4164d639f48d656.js","sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'intro',\r\n  templateUrl: './intro.component.html',\r\n  styleUrls: ['./intro.component.scss']\r\n})\r\nexport class IntroComponent {}\r\n","<div class=\"container intro\">\r\n  <!-- <div class=\"row\"> -->\r\n  <div class=\"intro-head\">Full-stack Software Developer</div>\r\n  <div class=\"intro-dialog\">\r\n    I made easy and beautiful front-end & secured, efficent, organized and high\r\n    performance back-end.\r\n    <!-- I design and code beautifully simple things, and I love what I do. -->\r\n  </div>\r\n  <div class=\"intro-avatar\">\r\n    <img class=\"intro-avatar-icon\" src=\"/assets/svgs/man.svg\" alt=\"user icon\" />\r\n  </div>\r\n  <div class=\"intro-image\">\r\n    <img\r\n      class=\"intro-image-img\"\r\n      src=\"/assets/images/hero.png\"\r\n      alt=\"user icon\"\r\n    />\r\n  </div>\r\n  <!-- </div> -->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'base-info',\r\n  templateUrl: './base-info.component.html',\r\n  styleUrls: ['./base-info.component.scss']\r\n})\r\nexport class BaseInfoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"base\">\r\n  <div class=\"container\">\r\n    <div class=\"base-head\">Hi, I’m Nazmul Alam. Nice to meet you.</div>\r\n    <div class=\"base-text\">\r\n      Since beginning my journey as a software developer nearly 5 years ago,\r\n      I've done remote work for agencies, consulted for startups, and\r\n      collaborated with talented people to create digital products for both\r\n      business and consumer use. I'm quietly confident, naturally curious, and\r\n      perpetually improving my chops.\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'features',\r\n  templateUrl: './features.component.html',\r\n  styleUrls: ['./features.component.scss']\r\n})\r\nexport class FeaturesComponent {\r\n  constructor() {}\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"feature\">\r\n    <div class=\"row m-0\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"feature-col\">\r\n          <figure class=\"feature-col-image\">\r\n            <img\r\n              class=\"feature-col-image-icon\"\r\n              src=\"/assets/svgs/web-design.svg\"\r\n            />\r\n          </figure>\r\n          <div class=\"feature-col-title\">Front-end Developer</div>\r\n          <p>\r\n            I tend to code things from scratch, and enjoy bringing ideas to life\r\n            in the browser.\r\n          </p>\r\n          <div class=\"feature-col-h23\">Languages I speak:</div>\r\n          <p>Angular, Typescript, Javascript, Rx/Js, HTML, CSS, Sass, Less</p>\r\n\r\n          <div class=\"feature-col-h23\">Dev Tools:</div>\r\n          <p>\r\n            Vscode <br />\r\n            Bitbucket <br />\r\n            Bootstrap <br />\r\n            Github <br />\r\n            Gitlab <br />\r\n            Terminal <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-4\">\r\n        <div class=\"feature-col\">\r\n          <figure class=\"feature-col-image\">\r\n            <img class=\"feature-col-image-icon\" src=\"/assets/svgs/server.svg\" />\r\n          </figure>\r\n          <div class=\"feature-col-title\">Back-end Developer</div>\r\n          <p>\r\n            I always focus about performance, clean code, minimum number of line\r\n            of code and finally always security.\r\n          </p>\r\n          <div class=\"feature-col-h23\">Languages I speak:</div>\r\n          <p>Java, Java EE, Springboot, Hibernet, JPA, SQL</p>\r\n\r\n          <div class=\"feature-col-h23\">Dev Tools:</div>\r\n          <p>\r\n            Intellij <br />\r\n            Eclipse <br />\r\n            Bitbucket <br />\r\n            Github <br />\r\n            Gitlab <br />\r\n            Terminal <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"feature-col\">\r\n          <figure class=\"feature-col-image\">\r\n            <img\r\n              class=\"feature-col-image-icon\"\r\n              src=\"/assets/svgs/smartphone.svg\"\r\n            />\r\n          </figure>\r\n          <div class=\"feature-col-title\">Mobie app Developer</div>\r\n          <p>Light weight, high performance, easy user interface mobile app.</p>\r\n          <div class=\"feature-col-h23\">Languages I speak:</div>\r\n          <p>Android, Flutter, Java, Dart </p>\r\n\r\n          <div class=\"feature-col-h23\">Dev Tools:</div>\r\n          <p>\r\n            Android Studio <br />\r\n            Intellij <br />\r\n            Eclipse <br />\r\n            Bitbucket <br />\r\n            Github <br />\r\n            Gitlab <br />\r\n            Terminal <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'recents',\r\n  templateUrl: './recents.component.html',\r\n  styleUrls: ['./recents.component.scss']\r\n})\r\nexport class RecentsComponent {\r\n  constructor() {}\r\n}\r\n","<div class=\"container recent\">\r\n  <div class=\"recent-head\">My Recent Work</div>\r\n  <div class=\"recent-dialog\">\r\n    Here are a few recent design projects. Want to see more?\r\n    <a href=\"mailto:nazmuldipu@gmail.com\">Email me.</a>\r\n  </div>\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col-md-4 p-2\">\r\n      <div class=\"flip-container\" ontouchstart=\"this.classList.toggle('hover');\">\r\n        <div class=\"flipper recent-card\">\r\n          <div class=\"front recent-card-front\" style=\"background-color: #cee7e7;\">\r\n            <img class=\"recent-card-front-image\" src=\"/assets/images/hotelswave.png\" />\r\n            <span class=\"recent-card-front-name text-light\" style=\"color: #820000 !important;\">Hotelswave</span>\r\n          </div>\r\n          <div class=\"back recent-card-back\" style=\"background-color:  #293347;\">\r\n            <div class=\"recent-card-back-text\">\r\n              Hotelswave is online hotel booking site\r\n            </div>\r\n            <div class=\"recent-card-back-link\">\r\n              <a class=\"btn btn-outline-primary\" href=\"https://www.hotelswave.com\" target=\"_blank\">\r\n                Visit website <i class=\"fa fa-chevron-right\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-4 p-2\">\r\n      <div class=\"flip-container\" ontouchstart=\"this.classList.toggle('hover');\">\r\n        <div class=\"flipper recent-card\">\r\n          <div class=\"front recent-card-front\" style=\"background-color: #550d4e;\">\r\n            <img class=\"recent-card-front-image\" src=\"/assets/images/monerbari.png\" />\r\n            <span class=\"recent-card-front-name text-light\">Monerbari</span>\r\n          </div>\r\n          <div class=\"back recent-card-back\" style=\"background-color:  #293347;\">\r\n            <div class=\"recent-card-back-text\">\r\n              Home shifting, Interior design, Event management, Truck/Van order\r\n              service provider\r\n            </div>\r\n            <div class=\"recent-card-back-link\">\r\n              <a class=\"btn btn-outline-primary\" href=\"https://www.monerbari.com\" target=\"_blank\">\r\n                Visit website <i class=\"fa fa-chevron-right\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-4 p-2\">\r\n      <div class=\"flip-container\" ontouchstart=\"this.classList.toggle('hover');\">\r\n        <div class=\"flipper recent-card\">\r\n          <div class=\"front recent-card-front\" style=\"background-color: green;\">\r\n            <img class=\"recent-card-front-image\" src=\"/assets/images/jananibd.png\" />\r\n            <span class=\"recent-card-front-name text-light\">Jananibd</span>\r\n          </div>\r\n          <div class=\"back recent-card-back\" style=\"background-color:  #293347;\">\r\n            <div class=\"recent-card-back-text\">\r\n              Jananibd is a Internet Service Provider (ISP)\r\n            </div>\r\n            <div class=\"recent-card-back-link\">\r\n              <a class=\"btn btn-outline-primary\" href=\"https://www.jananibd.com\" target=\"_blank\">\r\n                Visit website <i class=\"fa fa-chevron-right\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-4 p-2\">\r\n      <div class=\"flip-container\" ontouchstart=\"this.classList.toggle('hover');\">\r\n        <div class=\"flipper recent-card\">\r\n          <div class=\"front recent-card-front\" style=\"background-color: #333;\">\r\n            <img class=\"recent-card-front-image\" src=\"/assets/images/imart.png\" />\r\n            <span class=\"recent-card-front-name text-light\"> i Mart</span>\r\n          </div>\r\n          <div class=\"back recent-card-back\" style=\"background-color:  #293347;\">\r\n            <div class=\"recent-card-back-text\">\r\n              i Mart is a e-commerce organic food site.\r\n            </div>\r\n            <div class=\"recent-card-back-link\">\r\n              <a class=\"btn btn-outline-primary\" href=\"https://www.imartltd.com/\" target=\"_blank\">\r\n                Visit website <i class=\"fa fa-chevron-right\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-4 p-2\">\r\n      <div class=\"flip-container\" ontouchstart=\"this.classList.toggle('hover');\">\r\n        <div class=\"flipper recent-card\">\r\n          <div class=\"front recent-card-front\" style=\"background-color:#1a8536;\">\r\n            <img class=\"recent-card-front-image\" src=\"/assets/images/ita.jpg\" />\r\n            <span class=\"recent-card-front-name text-light\"> ITA </span>\r\n          </div>\r\n          <div class=\"back recent-card-back\" style=\"background-color:  #293347;\">\r\n            <div class=\"recent-card-back-text\">\r\n              ITA is a tourism company that arrange diffrent kind of tours with cost value.\r\n            </div>\r\n            <div class=\"recent-card-back-link\">\r\n              <a class=\"btn btn-outline-primary\" href=\"https://www.ita.com.bd/\" target=\"_blank\">\r\n                Visit website <i class=\"fa fa-chevron-right\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'startups',\r\n  templateUrl: './startups.component.html',\r\n  styleUrls: ['./startups.component.scss']\r\n})\r\nexport class StartupsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"startups\">\r\n  <div class=\"container\">\r\n    <div class=\"startups-head\">My Startup Projects</div>\r\n    <div class=\"startups-text\">\r\n      I'm a bit of a digital product junky. Over the years, I've demoed and\r\n      trialed hundreds of web and mobile apps in different industries and\r\n      verticals. Eventually, I decided that it would be a fun challenge to try\r\n      designing and building my own.\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"container\">\r\n  <div class=\"projects\">\r\n    <div class=\"row first\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"projects-card shadow-sm\" style=\"background-color: teal; border-color: teal; color: white;\">\r\n          <div class=\"projects-card-head\">\r\n            <img class=\"projects-card-head-image\" src=\"/assets/images/paperplane.png\" />\r\n            <span class=\"projects-card-head-name\">\r\n              Academy Uses <strong> SMS </strong>Gateway\r\n            </span>\r\n          </div>\r\n          <div class=\"projects-card-dialog\">\r\n            A powerful software platform to send your information to your\r\n            students parents.\r\n          </div>\r\n          <div class=\"projects-card-link\">\r\n            <a href=\"https://academy.unololtd.com/\" target=\"_blank\" style=\"color: wheat; text-decoration: none;\">\r\n              Visit site\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-4\">\r\n        <div class=\"projects-card shadow-sm\" style=\"background-color: #c6e2ff; border-color: #c6e2ff; \">\r\n          <div class=\"projects-card-head\">\r\n            <img class=\"projects-card-head-image\" src=\"/assets/images/therapy.png\" />\r\n            <span class=\"projects-card-head-name\">\r\n              <strong> Physiotherapy </strong> online\r\n            </span>\r\n          </div>\r\n          <div class=\"projects-card-dialog\">\r\n            A platform where Physiotherapy center would be able to recorde their\r\n            patients informations and accountings\r\n          </div>\r\n          <div class=\"projects-card-link\">\r\n            <a href=\"http://therapy.unololtd.com/\" target=\"_blank\" style=\"color: #169f48; text-decoration: none;\">\r\n              Visit site\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-4\">\r\n        <div class=\"projects-card shadow-sm\">\r\n          <div class=\"projects-card-head\">\r\n            <img class=\"projects-card-head-image\" src=\"/assets/images/isp.png\" />\r\n            <span class=\"projects-card-head-name\">\r\n              <strong> ISP </strong> Billing\r\n            </span>\r\n          </div>\r\n          <div class=\"projects-card-dialog\">\r\n            ISP software where isp will record their customer informations,\r\n            accountings and billings.\r\n          </div>\r\n          <div class=\"projects-card-link\">\r\n            <a href=\"http://isp.unololtd.com/\" target=\"_blank\">\r\n              Visit site\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"projects-card shadow-sm\" style=\"background-color: #f5ff9b; border-color: #f5ff9b; \">\r\n          <div class=\"projects-card-head\">\r\n            <img class=\"projects-card-head-image\" src=\"/assets/images/coldStorage.png\" />\r\n            <span class=\"projects-card-head-name\">\r\n              <strong> Cold storage </strong>\r\n            </span>\r\n          </div>\r\n          <div class=\"projects-card-dialog\">\r\n            A platform where ColdStorage center would be able to recorde their\r\n            operational informations and accountings\r\n          </div>\r\n          <div class=\"projects-card-link\">\r\n            <a href=\"http://cold.unololtd.com/\" target=\"_blank\" style=\"color: #169f48; text-decoration: none;\">\r\n              Visit site\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <div class=\"investment text-center\">\r\n    <div class=\"investment-head\">Interested in collaborating or investing?</div>\r\n    <div class=\"investment-text\">\r\n      I’m always open to discussing product design work or partnership\r\n      opportunities.\r\n    </div>\r\n    <div class=\"investment-button\">\r\n      <a class=\"btn btn-outline-primary\"\r\n        href=\"mailto:nazmuldipu@gmail.com?subject=Start a conversation&body=Hello Nazmul, I would like to build a project with you.\">\r\n        Start a conversation\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent {\r\n  array = [];\r\n  sum = 100;\r\n  throttle = 300;\r\n  scrollDistance = 1;\r\n  scrollUpDistance = 2;\r\n  direction = '';\r\n  modalOpen = false;\r\n\r\n  constructor() {\r\n    this.appendItems(0, this.sum);\r\n  }\r\n\r\n  addItems(startIndex, endIndex, _method) {\r\n    for (let i = 0; i < this.sum; ++i) {\r\n      this.array[_method]([this.sum + i, ' ', this.generateWord()].join(''));\r\n    }\r\n  }\r\n\r\n  appendItems(startIndex, endIndex) {\r\n    this.addItems(startIndex, endIndex, 'push');\r\n  }\r\n\r\n  prependItems(startIndex, endIndex) {\r\n    this.addItems(startIndex, endIndex, 'unshift');\r\n  }\r\n\r\n  onScrollDown() {\r\n    console.log('scrolled down!!');\r\n\r\n    // add another 20 items\r\n    const start = this.sum;\r\n    this.sum += 20;\r\n    this.appendItems(start, this.sum);\r\n\r\n    this.direction = 'down';\r\n  }\r\n\r\n  onUp() {\r\n    console.log('scrolled up!');\r\n    const start = this.sum;\r\n    this.sum += 20;\r\n    this.prependItems(start, this.sum);\r\n\r\n    this.direction = 'up';\r\n  }\r\n  generateWord() {\r\n    return 'abc';\r\n  }\r\n\r\n  toggleModal() {\r\n    this.modalOpen = !this.modalOpen;\r\n  }\r\n}\r\n","<div class=\"footer2\"></div>\r\n<div class=\"container\">\r\n  <div class=\"footer\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3 text-center\">\r\n        <span class=\"footer-left\">Start a project</span>\r\n      </div>\r\n      <div class=\"col-md-6 text-center\">\r\n        <span class=\"footer-center\"\r\n          >Interested in working together? We should queue up a chat. I’ll buy\r\n          the coffee.</span\r\n        >\r\n      </div>\r\n      <div class=\"col-md-3 text-center\">\r\n        <span class=\"footer-right\">\r\n          <a\r\n            class=\"btn btn-outline-primary\"\r\n            href=\"mailto:nazmuldipu@gmail.com?subject=Start a conversation&body=Hello Nazmul, Let's have a cup of coffee with you.\"\r\n          >\r\n            Let's do this\r\n          </a>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"footer3\">\r\n  <div class=\"container text-center\">\r\n    <img\r\n      src=\"/assets/images/logowhite.png\"\r\n      alt=\"Search icon\"\r\n      style=\"height: 48px;\"\r\n    />\r\n    <div class=\"footer3-texts\">\r\n      Living, learning, & leveling up <br />\r\n      one day at a time.\r\n    </div>\r\n    <div class=\"footer3-follow\">\r\n      <a\r\n        href=\"https://www.linkedin.com/in/nazmuldipu/\"\r\n        class=\"btn btn-outline-light mx-1\"\r\n        target=\"_blank\"\r\n      >\r\n        <i class=\"fa fa-linkedin\"></i>\r\n      </a>\r\n      <a\r\n        href=\"https://www.facebook.com/nazmulng\"\r\n        class=\"btn btn-outline-light mx-1\"\r\n        target=\"_blank\"\r\n      >\r\n        <i class=\"fa fa-facebook\"></i>\r\n      </a>\r\n      <a\r\n        href=\"https://twitter.com/nazmulng\"\r\n        class=\"btn btn-outline-light mx-1\"\r\n        target=\"_blank\"\r\n      >\r\n        <i class=\"fa fa-twitter\"></i>\r\n      </a>\r\n      <a href=\"mailto:nazmuldipu@gmail.com\" class=\"btn btn-outline-light mx-1\">\r\n        <i class=\"fa fa-envelope-o\"></i>\r\n      </a>\r\n    </div>\r\n  </div>\r\n  <div class=\"container text-center mt-5 pb-5\">\r\n    Handcrafted by me © monerbari.com\r\n  </div>\r\n</div>\r\n\r\n<!-- <h1 class=\"title well\">\r\n  ngx-infinite-scroll v6.0.0\r\n  <section>\r\n    <small>items: {{ sum }}, now triggering scroll: {{ direction }}</small>\r\n  </section>\r\n  <section>\r\n    <button class=\"btn btn-info\" (click)=\"toggleModal()\">\r\n      Open Infinite Scroll in Modal\r\n    </button>\r\n  </section>\r\n</h1> -->\r\n<!-- <modal *ngIf=\"modalOpen\" (onClose)=\"toggleModal()\"></modal> -->\r\n<!-- <div\r\n  class=\"search-results\"\r\n  infinite-scroll\r\n  [infiniteScrollDistance]=\"scrollDistance\"\r\n  [infiniteScrollUpDistance]=\"scrollUpDistance\"\r\n  [infiniteScrollThrottle]=\"throttle\"\r\n  (scrolled)=\"onScrollDown()\"\r\n  (scrolledUp)=\"onUp()\"\r\n>\r\n  <p *ngFor=\"let i of array\">{{ i }}</p>\r\n</div> -->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.scss']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<intro></intro>\r\n<base-info></base-info>\r\n<features></features> \r\n<recents></recents> \r\n<startups></startups>\r\n<footer></footer>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.scss']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div\r\n    class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white\"\r\n  >\r\n    <h5 class=\"my-0 mr-md-auto font-weight-normal\">\r\n      <img\r\n        src=\"/assets/images/logoblue.png\"\r\n        alt=\"Search icon\"\r\n        style=\"height: 48px;\"\r\n      />\r\n    </h5>\r\n    <nav class=\"my-2 my-md-0 mr-md-3\">\r\n      <!--\r\n        <a class=\"p-2 text-dark\" href=\"#\">Features</a>\r\n        <a class=\"p-2 text-dark\" href=\"#\">Enterprise</a>\r\n        <a class=\"p-2 text-dark\" href=\"#\">Support</a>\r\n        <a class=\"p-2 text-dark\" href=\"#\">Pricing</a>\r\n      -->\r\n    </nav>\r\n    <a\r\n      class=\"btn btn-outline-primary\"\r\n      href=\"mailto:nazmuldipu@gmail.com?subject=Hello Nazmul&body=Hello Nazmul, I have visited site, ...\"\r\n    >\r\n      Say Hello\r\n    </a>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"menu\"> -->\r\n<nav-bar></nav-bar>\r\n<!-- <side-nav class=\"menu-side\"></side-nav> -->\r\n<!-- <div class=\"contents\"> -->\r\n<router-outlet class=\"components\"></router-outlet>\r\n<!-- <footer></footer> -->\r\n<!-- </div> -->\r\n<!-- </div> -->\r\n","import { Directive, ElementRef, EventEmitter, Input, NgModule, NgZone, Output } from '@angular/core';\nimport { fromEvent, of } from 'rxjs';\nimport { filter, map, mergeMap, tap, throttleTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/ngx-ins-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} selector\n * @param {?} scrollWindow\n * @param {?} defaultElement\n * @param {?} fromRoot\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction resolveContainerElement(selector, scrollWindow, defaultElement, fromRoot) {\n    /** @type {?} */\n    const hasWindow = window && !!window.document && window.document.documentElement;\n    /** @type {?} */\n    let container = hasWindow && scrollWindow ? window : defaultElement;\n    if (selector) {\n        /** @type {?} */\n        const containerIsString = selector && hasWindow && typeof selector === 'string';\n        container = containerIsString\n            ? findElement(selector, defaultElement.nativeElement, fromRoot)\n            : selector;\n        if (!container) {\n            throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n        }\n    }\n    return container;\n}\n/**\n * @param {?} selector\n * @param {?} customRoot\n * @param {?} fromRoot\n * @return {?}\n */\nfunction findElement(selector, customRoot, fromRoot) {\n    /** @type {?} */\n    const rootEl = fromRoot ? window.document : customRoot;\n    return rootEl.querySelector(selector);\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction inputPropChanged(prop) {\n    return prop && !prop.firstChange;\n}\n/**\n * @return {?}\n */\nfunction hasWindowDefined() {\n    return typeof window !== 'undefined';\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/axis-resolver.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst VerticalProps = {\n    clientHeight: \"clientHeight\",\n    offsetHeight: \"offsetHeight\",\n    scrollHeight: \"scrollHeight\",\n    pageYOffset: \"pageYOffset\",\n    offsetTop: \"offsetTop\",\n    scrollTop: \"scrollTop\",\n    top: \"top\"\n};\n/** @type {?} */\nconst HorizontalProps = {\n    clientHeight: \"clientWidth\",\n    offsetHeight: \"offsetWidth\",\n    scrollHeight: \"scrollWidth\",\n    pageYOffset: \"pageXOffset\",\n    offsetTop: \"offsetLeft\",\n    scrollTop: \"scrollLeft\",\n    top: \"left\"\n};\nclass AxisResolver {\n    /**\n     * @param {?=} vertical\n     */\n    constructor(vertical = true) {\n        this.vertical = vertical;\n        this.propsMap = vertical ? VerticalProps : HorizontalProps;\n    }\n    /**\n     * @return {?}\n     */\n    clientHeightKey() {\n        return this.propsMap.clientHeight;\n    }\n    /**\n     * @return {?}\n     */\n    offsetHeightKey() {\n        return this.propsMap.offsetHeight;\n    }\n    /**\n     * @return {?}\n     */\n    scrollHeightKey() {\n        return this.propsMap.scrollHeight;\n    }\n    /**\n     * @return {?}\n     */\n    pageYOffsetKey() {\n        return this.propsMap.pageYOffset;\n    }\n    /**\n     * @return {?}\n     */\n    offsetTopKey() {\n        return this.propsMap.offsetTop;\n    }\n    /**\n     * @return {?}\n     */\n    scrollTopKey() {\n        return this.propsMap.scrollTop;\n    }\n    /**\n     * @return {?}\n     */\n    topKey() {\n        return this.propsMap.top;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/event-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} alwaysCallback\n * @param {?} shouldFireScrollEvent\n * @param {?} isTriggeredCurrentTotal\n * @return {?}\n */\nfunction shouldTriggerEvents(alwaysCallback, shouldFireScrollEvent, isTriggeredCurrentTotal) {\n    if (alwaysCallback && shouldFireScrollEvent) {\n        return true;\n    }\n    if (!isTriggeredCurrentTotal && shouldFireScrollEvent) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/position-resolver.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction createResolver({ windowElement, axis }) {\n    return createResolverWithContainer({ axis, isWindow: isElementWindow(windowElement) }, windowElement);\n}\n/**\n * @param {?} resolver\n * @param {?} windowElement\n * @return {?}\n */\nfunction createResolverWithContainer(resolver, windowElement) {\n    /** @type {?} */\n    const container = resolver.isWindow || (windowElement && !windowElement.nativeElement)\n        ? windowElement\n        : windowElement.nativeElement;\n    return Object.assign(Object.assign({}, resolver), { container });\n}\n/**\n * @param {?} windowElement\n * @return {?}\n */\nfunction isElementWindow(windowElement) {\n    /** @type {?} */\n    const isWindow = ['Window', 'global'].some((/**\n     * @param {?} obj\n     * @return {?}\n     */\n    (obj) => Object.prototype.toString.call(windowElement).includes(obj)));\n    return isWindow;\n}\n/**\n * @param {?} isContainerWindow\n * @param {?} windowElement\n * @return {?}\n */\nfunction getDocumentElement(isContainerWindow, windowElement) {\n    return isContainerWindow ? windowElement.document.documentElement : null;\n}\n/**\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePoints(element, resolver) {\n    /** @type {?} */\n    const height = extractHeightForElement(resolver);\n    return resolver.isWindow\n        ? calculatePointsForWindow(height, element, resolver)\n        : calculatePointsForElement(height, element, resolver);\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForWindow(height, element, resolver) {\n    const { axis, container, isWindow } = resolver;\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n    // scrolled until now / current y point\n    /** @type {?} */\n    const scrolled = height +\n        getElementPageYOffset(getDocumentElement(isWindow, container), axis, isWindow);\n    // total height / most bottom y point\n    /** @type {?} */\n    const nativeElementHeight = getElementHeight(element.nativeElement, isWindow, offsetHeightKey, clientHeightKey);\n    /** @type {?} */\n    const totalToScroll = getElementOffsetTop(element.nativeElement, axis, isWindow) +\n        nativeElementHeight;\n    return { height, scrolled, totalToScroll, isWindow };\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForElement(height, element, resolver) {\n    const { axis, container } = resolver;\n    // perhaps use container.offsetTop instead of 'scrollTop'\n    /** @type {?} */\n    const scrolled = container[axis.scrollTopKey()];\n    /** @type {?} */\n    const totalToScroll = container[axis.scrollHeightKey()];\n    return { height, scrolled, totalToScroll, isWindow: false };\n}\n/**\n * @param {?} axis\n * @return {?}\n */\nfunction extractHeightPropKeys(axis) {\n    return {\n        offsetHeightKey: axis.offsetHeightKey(),\n        clientHeightKey: axis.clientHeightKey()\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction extractHeightForElement({ container, isWindow, axis }) {\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n    return getElementHeight(container, isWindow, offsetHeightKey, clientHeightKey);\n}\n/**\n * @param {?} elem\n * @param {?} isWindow\n * @param {?} offsetHeightKey\n * @param {?} clientHeightKey\n * @return {?}\n */\nfunction getElementHeight(elem, isWindow, offsetHeightKey, clientHeightKey) {\n    if (isNaN(elem[offsetHeightKey])) {\n        /** @type {?} */\n        const docElem = getDocumentElement(isWindow, elem);\n        return docElem ? docElem[clientHeightKey] : 0;\n    }\n    else {\n        return elem[offsetHeightKey];\n    }\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementOffsetTop(elem, axis, isWindow) {\n    /** @type {?} */\n    const topKey = axis.topKey();\n    // elem = elem.nativeElement;\n    if (!elem.getBoundingClientRect) {\n        // || elem.css('none')) {\n        return;\n    }\n    return (elem.getBoundingClientRect()[topKey] +\n        getElementPageYOffset(elem, axis, isWindow));\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementPageYOffset(elem, axis, isWindow) {\n    /** @type {?} */\n    const pageYOffset = axis.pageYOffsetKey();\n    /** @type {?} */\n    const scrollTop = axis.scrollTopKey();\n    /** @type {?} */\n    const offsetTop = axis.offsetTopKey();\n    if (isNaN(window.pageYOffset)) {\n        return getDocumentElement(isWindow, elem)[scrollTop];\n    }\n    else if (elem.ownerDocument) {\n        return elem.ownerDocument.defaultView[pageYOffset];\n    }\n    else {\n        return elem[offsetTop];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/scroll-resolver.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} container\n * @param {?} distance\n * @param {?} scrollingDown\n * @return {?}\n */\nfunction shouldFireScrollEvent(container, distance, scrollingDown) {\n    /** @type {?} */\n    let remaining;\n    /** @type {?} */\n    let containerBreakpoint;\n    if (container.totalToScroll <= 0) {\n        return false;\n    }\n    /** @type {?} */\n    const scrolledUntilNow = container.isWindow ? container.scrolled : container.height + container.scrolled;\n    if (scrollingDown) {\n        remaining =\n            (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n        containerBreakpoint = distance.down / 10;\n    }\n    else {\n        /** @type {?} */\n        const totalHiddenContentHeight = container.scrolled + (container.totalToScroll - scrolledUntilNow);\n        remaining = container.scrolled / totalHiddenContentHeight;\n        containerBreakpoint = distance.up / 10;\n    }\n    /** @type {?} */\n    const shouldFireEvent = remaining <= containerBreakpoint;\n    return shouldFireEvent;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @return {?}\n */\nfunction isScrollingDownwards(lastScrollPosition, container) {\n    return lastScrollPosition < container.scrolled;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @param {?} distance\n * @return {?}\n */\nfunction getScrollStats(lastScrollPosition, container, distance) {\n    /** @type {?} */\n    const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n    return {\n        fire: shouldFireScrollEvent(container, distance, scrollDown),\n        scrollDown\n    };\n}\n/**\n * @param {?} position\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} totalToScroll\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} scroll\n * @param {?} scrollState\n * @param {?} triggered\n * @param {?} isScrollingDown\n * @return {?}\n */\n\n/**\n * @param {?} totalToScroll\n * @param {?} scrollState\n * @param {?} isScrollingDown\n * @return {?}\n */\n\n/**\n * @param {?} scrollState\n * @param {?} scrolledUntilNow\n * @param {?} totalToScroll\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/scroll-state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollState {\n    /**\n     * @param {?} __0\n     */\n    constructor({ totalToScroll }) {\n        this.lastScrollPosition = 0;\n        this.lastTotalToScroll = 0;\n        this.totalToScroll = 0;\n        this.triggered = {\n            down: 0,\n            up: 0\n        };\n        this.totalToScroll = totalToScroll;\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    updateScrollPosition(position) {\n        return (this.lastScrollPosition = position);\n    }\n    /**\n     * @param {?} totalToScroll\n     * @return {?}\n     */\n    updateTotalToScroll(totalToScroll) {\n        if (this.lastTotalToScroll !== totalToScroll) {\n            this.lastTotalToScroll = this.totalToScroll;\n            this.totalToScroll = totalToScroll;\n        }\n    }\n    /**\n     * @param {?} scrolledUntilNow\n     * @param {?} totalToScroll\n     * @return {?}\n     */\n    updateScroll(scrolledUntilNow, totalToScroll) {\n        this.updateScrollPosition(scrolledUntilNow);\n        this.updateTotalToScroll(totalToScroll);\n    }\n    /**\n     * @param {?} scroll\n     * @param {?} isScrollingDown\n     * @return {?}\n     */\n    updateTriggeredFlag(scroll, isScrollingDown) {\n        if (isScrollingDown) {\n            this.triggered.down = scroll;\n        }\n        else {\n            this.triggered.up = scroll;\n        }\n    }\n    /**\n     * @param {?} totalToScroll\n     * @param {?} isScrollingDown\n     * @return {?}\n     */\n    isTriggeredScroll(totalToScroll, isScrollingDown) {\n        return isScrollingDown\n            ? this.triggered.down === totalToScroll\n            : this.triggered.up === totalToScroll;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/scroll-register.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction createScroller(config) {\n    const { scrollContainer, scrollWindow, element, fromRoot } = config;\n    /** @type {?} */\n    const resolver = createResolver({\n        axis: new AxisResolver(!config.horizontal),\n        windowElement: resolveContainerElement(scrollContainer, scrollWindow, element, fromRoot)\n    });\n    /** @type {?} */\n    const scrollState = new ScrollState({\n        totalToScroll: calculatePoints(element, resolver)\n    });\n    /** @type {?} */\n    const options = {\n        container: resolver.container,\n        throttle: config.throttle\n    };\n    /** @type {?} */\n    const distance = {\n        up: config.upDistance,\n        down: config.downDistance\n    };\n    return attachScrollEvent(options).pipe(mergeMap((/**\n     * @return {?}\n     */\n    () => of(calculatePoints(element, resolver)))), map((/**\n     * @param {?} positionStats\n     * @return {?}\n     */\n    (positionStats) => toInfiniteScrollParams(scrollState.lastScrollPosition, positionStats, distance))), tap((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ stats }) => scrollState.updateScroll(stats.scrolled, stats.totalToScroll))), filter((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ fire, scrollDown, stats: { totalToScroll } }) => shouldTriggerEvents(config.alwaysCallback, fire, scrollState.isTriggeredScroll(totalToScroll, scrollDown)))), tap((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ scrollDown, stats: { totalToScroll } }) => {\n        scrollState.updateTriggeredFlag(totalToScroll, scrollDown);\n    })), map(toInfiniteScrollAction));\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction attachScrollEvent(options) {\n    /** @type {?} */\n    let obs = fromEvent(options.container, 'scroll');\n    // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n    // Let's avoid calling the function unless needed.\n    // Replacing with throttleTime seems to solve the problem\n    // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n    if (options.throttle) {\n        obs = obs.pipe(throttleTime(options.throttle));\n    }\n    return obs;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} stats\n * @param {?} distance\n * @return {?}\n */\nfunction toInfiniteScrollParams(lastScrollPosition, stats, distance) {\n    const { scrollDown, fire } = getScrollStats(lastScrollPosition, stats, distance);\n    return {\n        scrollDown,\n        fire,\n        stats\n    };\n}\n/** @type {?} */\nconst InfiniteScrollActions = {\n    DOWN: '[NGX_ISE] DOWN',\n    UP: '[NGX_ISE] UP'\n};\n/**\n * @param {?} response\n * @return {?}\n */\nfunction toInfiniteScrollAction(response) {\n    const { scrollDown, stats: { scrolled: currentScrollPosition } } = response;\n    return {\n        type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n        payload: {\n            currentScrollPosition\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/modules/infinite-scroll.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass InfiniteScrollDirective {\n    /**\n     * @param {?} element\n     * @param {?} zone\n     */\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.scrolled = new EventEmitter();\n        this.scrolledUp = new EventEmitter();\n        this.infiniteScrollDistance = 2;\n        this.infiniteScrollUpDistance = 1.5;\n        this.infiniteScrollThrottle = 150;\n        this.infiniteScrollDisabled = false;\n        this.infiniteScrollContainer = null;\n        this.scrollWindow = true;\n        this.immediateCheck = false;\n        this.horizontal = false;\n        this.alwaysCallback = false;\n        this.fromRoot = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this.infiniteScrollDisabled) {\n            this.setup();\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }) {\n        /** @type {?} */\n        const containerChanged = inputPropChanged(infiniteScrollContainer);\n        /** @type {?} */\n        const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n        /** @type {?} */\n        const distanceChanged = inputPropChanged(infiniteScrollDistance);\n        /** @type {?} */\n        const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n            (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n        if (containerChanged || disabledChanged || distanceChanged) {\n            this.destroyScroller();\n            if (shouldSetup) {\n                this.setup();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setup() {\n        if (hasWindowDefined()) {\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this.disposeScroller = createScroller({\n                    fromRoot: this.fromRoot,\n                    alwaysCallback: this.alwaysCallback,\n                    disable: this.infiniteScrollDisabled,\n                    downDistance: this.infiniteScrollDistance,\n                    element: this.element,\n                    horizontal: this.horizontal,\n                    scrollContainer: this.infiniteScrollContainer,\n                    scrollWindow: this.scrollWindow,\n                    throttle: this.infiniteScrollThrottle,\n                    upDistance: this.infiniteScrollUpDistance\n                }).subscribe((/**\n                 * @param {?} payload\n                 * @return {?}\n                 */\n                (payload) => this.zone.run((/**\n                 * @return {?}\n                 */\n                () => this.handleOnScroll(payload)))));\n            }));\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    handleOnScroll({ type, payload }) {\n        switch (type) {\n            case InfiniteScrollActions.DOWN:\n                return this.scrolled.emit(payload);\n            case InfiniteScrollActions.UP:\n                return this.scrolledUp.emit(payload);\n            default:\n                return;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyScroller();\n    }\n    /**\n     * @return {?}\n     */\n    destroyScroller() {\n        if (this.disposeScroller) {\n            this.disposeScroller.unsubscribe();\n        }\n    }\n}\nInfiniteScrollDirective.ɵfac = function InfiniteScrollDirective_Factory(t) { return new (t || InfiniteScrollDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nInfiniteScrollDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: InfiniteScrollDirective, selectors: [[\"\", \"infiniteScroll\", \"\"], [\"\", \"infinite-scroll\", \"\"], [\"\", \"data-infinite-scroll\", \"\"]], inputs: { infiniteScrollDistance: \"infiniteScrollDistance\", infiniteScrollUpDistance: \"infiniteScrollUpDistance\", infiniteScrollThrottle: \"infiniteScrollThrottle\", infiniteScrollDisabled: \"infiniteScrollDisabled\", infiniteScrollContainer: \"infiniteScrollContainer\", scrollWindow: \"scrollWindow\", immediateCheck: \"immediateCheck\", horizontal: \"horizontal\", alwaysCallback: \"alwaysCallback\", fromRoot: \"fromRoot\" }, outputs: { scrolled: \"scrolled\", scrolledUp: \"scrolledUp\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nInfiniteScrollDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nInfiniteScrollDirective.propDecorators = {\n    scrolled: [{ type: Output }],\n    scrolledUp: [{ type: Output }],\n    infiniteScrollDistance: [{ type: Input }],\n    infiniteScrollUpDistance: [{ type: Input }],\n    infiniteScrollThrottle: [{ type: Input }],\n    infiniteScrollDisabled: [{ type: Input }],\n    infiniteScrollContainer: [{ type: Input }],\n    scrollWindow: [{ type: Input }],\n    immediateCheck: [{ type: Input }],\n    horizontal: [{ type: Input }],\n    alwaysCallback: [{ type: Input }],\n    fromRoot: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InfiniteScrollDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { scrolled: [{\n            type: Output\n        }], scrolledUp: [{\n            type: Output\n        }], infiniteScrollDistance: [{\n            type: Input\n        }], infiniteScrollUpDistance: [{\n            type: Input\n        }], infiniteScrollThrottle: [{\n            type: Input\n        }], infiniteScrollDisabled: [{\n            type: Input\n        }], infiniteScrollContainer: [{\n            type: Input\n        }], scrollWindow: [{\n            type: Input\n        }], immediateCheck: [{\n            type: Input\n        }], horizontal: [{\n            type: Input\n        }], alwaysCallback: [{\n            type: Input\n        }], fromRoot: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/modules/ngx-infinite-scroll.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass InfiniteScrollModule {\n}\nInfiniteScrollModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: InfiniteScrollModule });\nInfiniteScrollModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function InfiniteScrollModule_Factory(t) { return new (t || InfiniteScrollModule)(); }, providers: [], imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InfiniteScrollModule, { declarations: [InfiniteScrollDirective], exports: [InfiniteScrollDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InfiniteScrollModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [InfiniteScrollDirective],\n                exports: [InfiniteScrollDirective],\n                imports: [],\n                providers: []\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/ngx-infinite-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n/**\n * Entry point for all public APIs of the package.\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-infinite-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InfiniteScrollDirective, InfiniteScrollModule };\n\n//# sourceMappingURL=ngx-infinite-scroll.js.map","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { IndexComponent } from './containers/index/index.component';\r\nimport { HomeComponent } from './home.component';\r\nimport { SideNavComponent } from './components/side-nav/side-nav.component';\r\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\r\nimport { IntroComponent } from './components/intro/intro.component';\r\nimport { BaseInfoComponent } from './components/base-info/base-info.component';\r\nimport { FeaturesComponent } from './components/features/features.component';\r\nimport { RecentsComponent } from './components/recents/recents.component';\r\nimport { StartupsComponent } from './components/startups/startups.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\n\r\nexport const ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: IndexComponent\r\n      }\r\n    ]\r\n  },\r\n  { path: '**', redirectTo: '/' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, InfiniteScrollModule, RouterModule.forChild(ROUTES)],\r\n  declarations: [\r\n    HomeComponent,\r\n    IndexComponent,\r\n    SideNavComponent,\r\n    NavBarComponent,\r\n    IntroComponent,\r\n    BaseInfoComponent,\r\n    FeaturesComponent,\r\n    RecentsComponent,\r\n    StartupsComponent,\r\n    FooterComponent\r\n  ]\r\n})\r\nexport class HomeModule {}\r\n"],"sourceRoot":"webpack:///"}